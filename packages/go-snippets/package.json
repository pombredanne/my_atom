{
  "name": "go-snippets",
  "main": "./lib/go-snippets",
  "version": "0.5.1",
  "description": "Go Language Snippets for Atom editor",
  "keywords": [],
  "activationCommands": {
    "atom-workspace": "go-snippets:toggle"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/siberuzay/go-snippets.git"
  },
  "license": "MIT",
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "dependencies": {},
  "readme": "# go-snippets package (Not ready for prime)\n\nGo Language Snippets for Atom\n\n## Usage ##\n\nAll snippets start with `g-` prefix\n\n### Error Snippets\n\n`g-err-return`\n\n```go\nif err != nil {\n  return $1 err\n}\n```\n\n### Assert Snippets\n\n`g-assert-noerror`\n```go\nassert.NoError(t, err)\n```\n`g-assert-notnil`\n\n```go\nassert.NotNil(t,$1)\n```\n\n### Test Snippets\n`g-test-cases`\n\n```go\n\n// Test$1 $2\nfunc Test$1(t *testing.T) {\n\n\ttestCases := []struct {\n\t\tgiven    string\n\t\texpected string\n\t}{\n\t\t{\n\t\t\tgiven:    \"\",\n\t\t\texpected: \"\",\n\t\t},\n\t}\n\n\tfor _, tc := range testCases {\n\n\t}\n\n}\n\n```\n### Import Snippets\n`g-im-boltdb`\n```go\n${1:import} \"github.com/boltdb/bolt\"\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/siberuzay/go-snippets/issues"
  },
  "homepage": "https://github.com/siberuzay/go-snippets#readme",
  "_id": "go-snippets@0.5.1",
  "_shasum": "45379159adde74accf777d508fd78dc4254f74a7",
  "_resolved": "file:../d-116415-4355-qcmn8r/package.tgz",
  "_from": "../d-116415-4355-qcmn8r/package.tgz",
  "_atomModuleCache": {
    "version": 1,
    "dependencies": [],
    "extensions": {
      ".coffee": [
        "lib/go-snippets-view.coffee",
        "lib/go-snippets.coffee"
      ],
      ".json": [
        "package.json"
      ]
    },
    "folders": []
  }
}